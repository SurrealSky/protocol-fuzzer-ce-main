

using System;
using System.ServiceProcess;
using NUnit.Framework;
using Peach.Core;
using Peach.Core.Test;
using Peach.Pro.Core.OS.Windows;
using Peach.Pro.Core.OS.Windows.Debugger;
using Peach.Pro.OS.Windows.Agent.Monitors;
using Pal = Peach.Pro.Core.OS.Pal;

namespace Peach.Pro.Test.OS.Windows.Debuggers
{
	[TestFixture]
	[Quick]
	[Peach]
	[Platform("Win")]
	class WinSystemTests
	{
		string caughtException;
		bool firstChance;
		private static readonly string Program = Utilities.GetAppResourcePath("CrashingProgram.exe");

		[SetUp]
		public void SetUp()
		{
			firstChance = true;
			caughtException = null;
		}

		[Test]
		public void NonCrashTest()
		{
			Environment.SetEnvironmentVariable("PEACH", "AAAA");
			var dbg = SystemDebugger.CreateProcess(Program);
			dbg.HandleAccessViolation = HandleAccessViolation;
			dbg.Run();

			Assert.IsNull(caughtException);
		}

		[Test]
		public void CrashTestFirstChance()
		{
			CrashTest(true, "");
			Assert.AreEqual("FirstChance", caughtException);
		}

		[Test]
		public void CrashTestSecondChance()
		{
			CrashTest(false, "");
			Assert.AreEqual("SecondChance", caughtException);
		}

		[Test]
		public void CrashChild()
		{
			CrashTest(true, " arg1 arg2");
			Assert.AreEqual("FirstChance", caughtException);
		}

		void CrashTest(bool handleFirstChance, string arg)
		{
			firstChance = handleFirstChance;

			Environment.SetEnvironmentVariable
			var dbg = SystemDebugger.CreateProcess(Program + arg);
			dbg.HandleAccessViolation = HandleAccessViolation;
			dbg.Run();
		}

		public bool HandleAccessViolation(ExceptionEvent evt)
		{
			if (evt.FirstChance != 0)
			{
				if (!firstChance)
					return true;

				caughtException = "FirstChance";
			}
			else
			{
				caughtException = "SecondChance";
			}

			return false;
		}

		[Test]
		public void ServiceTest()
		{
			if (!Privilege.IsUserAdministrator())
				Assert.Ignore("User is not an administrator.");

			if (!Environment.Is64BitProcess && Environment.Is64BitOperatingSystem)
				Assert.Ignore("Cannot run the 32bit version of this test on a 64bit operating system.");

			if (Environment.Is64BitProcess && !Environment.Is64BitOperatingSystem)
				Assert.Ignore("Cannot run the 64bit version of this test on a 32bit operating system.");

			try
			{
				using (var si = Pal.SingleInstance("Peach.Core.Test.OS.Windows.WinSystemTests"))
				{
					si.Lock();

					var dbg = new SystemDebuggerInstance();

					try
					{
						dbg.StartService("iphlpsvc", TimeSpan.FromSeconds(30));

						for (int i = 0; i < 10; ++i)
						{
							Assert.True(dbg.IsRunning);
							System.Threading.Thread.Sleep(100);
						}

						dbg.WaitForExit(0);

						Assert.Null(dbg.Fault);
					}
					finally
					{
						dbg.Dispose();
					}
				}
			}
			finally
			{
				using (ServiceController srv = new ServiceController("iphlpsvc"))
				{
					if (srv.Status == ServiceControllerStatus.Stopped)
					{
						srv.Start();
					}
				}
			}
		}

		[Test]
		public void BadProcess()
		{
			using (var dbg = new SystemDebuggerInstance())
			{
				var ex = Assert.Throws<PeachException>(() => dbg.StartProcess("foo.exe"));

				StringAssert.StartsWith("System debugger could not start process 'foo.exe'.", ex.Message);
			}
		}


		[Test]
		public void TestWinDbg()
		{
			Environment.SetEnvironmentVariable

			var dbg = new DebugEngineInstance
			{
				WinDbgPath = WindowsKernelDebugger.FindWinDbg(null),
				SymbolsPath = DebugEngineInstance.DefaultSymbolPath
			};

			try
			{
				dbg.StartProcess(Program);

				for (int i = 0; i < 10; ++i)
				{
					if (!dbg.IsRunning)
						break;
					System.Threading.Thread.Sleep(500);
				}

				Assert.False(dbg.IsRunning, "Debugger should not be running");
				Assert.NotNull(dbg.Fault, "Debugger should have detected fault");
			}
			finally
			{
				dbg.Dispose();
			}
		}

		[Test]
		public void TestWinDbgBadProcess()
		{
			SetUpFixture.EnableDebug();

			var dbg = new DebugEngineInstance
			{
				WinDbgPath = WindowsKernelDebugger.FindWinDbg(null),
				SymbolsPath = DebugEngineInstance.DefaultSymbolPath
			};

			try
			{
				var ex = Assert.Throws<PeachException>(() => dbg.StartProcess("Foo.exe"));

				StringAssert.Contains("The system cannot find the file specified.", ex.Message);
			}
			finally
			{
				dbg.Dispose();
			}
		}

		[Test]
		public void TestAttachBadProcess()
		{
			SetUpFixture.EnableDebug();

			var dbg = new DebugEngineInstance
			{
				WinDbgPath = WindowsKernelDebugger.FindWinDbg(null),
				SymbolsPath = DebugEngineInstance.DefaultSymbolPath
			};

			try
			{
				var ex = Assert.Throws<PeachException>(() => dbg.AttachProcess("1234"));

				StringAssert.Contains("Value does not fall within the expected range.", ex.Message);
			}
			finally
			{
				dbg.Dispose();
			}
		}

		[Test]
		public void TestAttachProcess()
		{
			SetUpFixture.EnableDebug();

			var dbg = new DebugEngineInstance
			{
				WinDbgPath = WindowsKernelDebugger.FindWinDbg(null),
				SymbolsPath = DebugEngineInstance.DefaultSymbolPath
			};

			try
			{
				var exe = Utilities.GetAppResourcePath("CrashableServer.exe");
				using (var p = ProcessHelper.Start(exe, "127.0.0.1 0", null, null))
				{
					dbg.AttachProcess(p.Id.ToString());

					for (var i = 0; i < 10; ++i)
					{
						if (dbg.IsRunning)
							break;

						System.Threading.Thread.Sleep(500);
					}

					Assert.True(dbg.IsRunning, "Debugger should be running");

					dbg.WaitForExit(0);

					Assert.Null(dbg.Fault, "Should not have detected fault");
				}
			}
			finally
			{
				dbg.Dispose();
			}
		}


		[Test]
		public void TestWinDbgStop()
		{
			SetUpFixture.EnableDebug();

			var dbg = new DebugEngineInstance
			{
				WinDbgPath = WindowsKernelDebugger.FindWinDbg(null),
				SymbolsPath = DebugEngineInstance.DefaultSymbolPath
			};

			try
			{
				var exe = Utilities.GetAppResourcePath("CrashableServer.exe");
				dbg.StartProcess(exe + " 127.0.0.1 0");

				for (var i = 0; i < 10; ++i)
				{
					if (dbg.IsRunning)
						break;

					System.Threading.Thread.Sleep(500);
				}

				Assert.True(dbg.IsRunning, "Debugger should be running");

				dbg.WaitForExit(0);

				Assert.Null(dbg.Fault, "Should not have detected fault");
			}
			finally
			{
				dbg.Dispose();
			}
		}

		[Test]
		public void TestWinDbgIgnoreReadAv()
		{
			var dbg = new DebugEngineInstance
			{
				IgnoreFirstChanceReadAv = true,
				WinDbgPath = WindowsKernelDebugger.FindWinDbg(null),
				SymbolsPath = DebugEngineInstance.DefaultSymbolPath
			};

			try
			{
				var exe = Utilities.GetAppResourcePath("CrashingProgram.exe");
				dbg.StartProcess(exe + " 1 2 3 4 5");

				Assert.True(dbg.IsRunning, "Debugger should be running");

				var exited = dbg.WaitForExit(10000);

				Assert.Null(dbg.Fault, "Should not have detected fault");
				Assert.True(exited, "Debugger should have exited");
			}
			finally
			{
				dbg.Dispose();
			}
		}

		[Test]
		public void TestSystemDebuggerIgnoreReadAv()
		{
			var dbg = new SystemDebuggerInstance
			{
				IgnoreFirstChanceReadAv = true,
				WinDbgPath = WindowsKernelDebugger.FindWinDbg(null),
				SymbolsPath = DebugEngineInstance.DefaultSymbolPath
			};

			try
			{
				var exe = Utilities.GetAppResourcePath("CrashingProgram.exe");
				dbg.StartProcess(exe + " 1 2 3 4 5");

				Assert.True(dbg.IsRunning, "Debugger should be running");

				var exited = dbg.WaitForExit(10000);

				Assert.Null(dbg.Fault, "Should not have detected fault");
				Assert.True(exited, "Debugger should have exited");
			}
			finally
			{
				dbg.Dispose();
			}
		}

	}
}
